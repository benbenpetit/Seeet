@use './reset';

*,
*::before,
*::after {
  box-sizing: border-box;
  font-family: 'Work Sans', sans-serif;
}

body {
  margin: 0;
  background-color: #cbaeff;
  overflow: hidden;
}

.cursor {
  position: fixed;
  z-index: 999;
  top: 0;
  left: 0;
  pointer-events: none;

  .lottie {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

.wrapper {
  width: 100%;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

header {
  position: fixed;
  z-index: 99;
  bottom: 16px;
  left: 0;
  right: 0;
  display: flex;
  justify-content: center;
  column-gap: 12px;

  button {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 5px;
    background-color: #fff;
    border-radius: 9999px;
    padding: clamp(10px, 2.5vh, 12px) clamp(18px, 4vh, 24px);
    font-size: clamp(14px, 2.5vh, 18px);
    cursor: auto;
    transition: background-color 0.225s cubic-bezier(0.4, 0, 0, 1);
    font-weight: 600;

    &.--clickable {
      cursor: pointer;

      &:hover {
        background-color: #f9f6ff;

        &::before {
          opacity: 1;
        }
      }
    }

    &.--hidden {
      background-color: #dadada;
      color: #333;

      &:hover {
        background-color: #dadada;
      }
    }

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      opacity: 0;
      border-radius: inherit;
      border: 2px solid #9114ff;
      transition: opacity 0.325s cubic-bezier(0.4, 0, 0, 1);
      pointer-events: none;
    }

    img {
      width: 36px;
      height: 36px;
      height: auto;
      object-fit: contain;
    }

    span {
      min-width: 1ch;
    }
  }
}

main {
  height: 100%;
  aspect-ratio: 9 / 7;
  padding: 3rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.board {
  width: 90%;
  display: grid;
  justify-content: center;
  align-items: center;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2vh;
  padding-bottom: calc(16px + 2 * clamp(10px, 2.5vh, 16px));
}

.card {
  justify-self: center;
  width: 100%;
  height: auto;
  aspect-ratio: 3 / 1.75;
  background-color: #fff;
  border-radius: 14px;
  box-shadow: 0 1px 4px 2px rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  opacity: 0;
  animation: popIn 0.2s cubic-bezier(0.4, 0, 0.2, 1.4) forwards;
  transition: background-color 0.225s cubic-bezier(0.4, 0, 0, 1);

  &:hover {
    background-color: #f9f6ff;
  }

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    border-color: #9114ff;
    border-style: solid;
    border-width: 0px;
    transition: border-width 0.125s cubic-bezier(0.4, 0, 0, 1);
  }

  &.--selected {
    &::before {
      border-width: 4px;
    }

    .card__shapes {
      transform: scale(0.95);
    }
  }

  &__shapes {
    height: 100%;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    transition: transform 0.125s cubic-bezier(0.4, 0, 0, 1);

    .card__shape {
      position: relative;
      display: inline-block;
      width: calc(28% - 0.75rem);
      height: 100%;

      svg,
      img {
        display: block;
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
      }

      img {
        opacity: 0.5;
      }
    }
  }

  $colors: (
    'green': #12d86b,
    'purple': #9114ff,
    'red': #ff2138,
  );

  @each $color, $value in $colors {
    &.--color-#{$color} {
      $shape-color: $value;

      svg {
        stroke: $shape-color;
        stroke-width: 5px;
        stroke-linecap: round;
      }

      &.--filling-solid {
        svg {
          rect,
          path {
            fill: $shape-color;
          }
        }
      }

      &.--filling-striped {
        svg {
          rect,
          path {
            fill: transparentize($shape-color, 0.7);
          }
        }
      }

      &.--filling-empty {
        svg {
          rect,
          path {
            fill: transparent;
          }
        }
      }
    }
  }
}

@keyframes popIn {
  0% {
    opacity: 0;
    transform: scale(0.7);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}
